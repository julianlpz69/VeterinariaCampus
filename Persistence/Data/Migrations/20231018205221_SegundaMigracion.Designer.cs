// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Data;

#nullable disable

namespace Persistence.Data.Migrations
{
    [DbContext(typeof(VeterinariaDBContext))]
    [Migration("20231018205221_SegundaMigracion")]
    partial class SegundaMigracion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Domain.Entities.Cita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCita")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdClienteFK")
                        .HasColumnType("int");

                    b.Property<int>("IdMascotaFK")
                        .HasColumnType("int");

                    b.Property<int>("IdVeterinarioFK")
                        .HasColumnType("int");

                    b.Property<string>("MotivoCita")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("IdClienteFK");

                    b.HasIndex("IdMascotaFK");

                    b.HasIndex("IdVeterinarioFK");

                    b.ToTable("cita", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FechaCita = new DateTime(2023, 10, 20, 15, 12, 45, 0, DateTimeKind.Unspecified),
                            IdClienteFK = 1,
                            IdMascotaFK = 1,
                            IdVeterinarioFK = 1,
                            MotivoCita = "Consulta de rutina"
                        },
                        new
                        {
                            Id = 2,
                            FechaCita = new DateTime(2023, 3, 21, 15, 13, 39, 0, DateTimeKind.Unspecified),
                            IdClienteFK = 2,
                            IdMascotaFK = 2,
                            IdVeterinarioFK = 2,
                            MotivoCita = "Vacunación"
                        },
                        new
                        {
                            Id = 3,
                            FechaCita = new DateTime(2023, 10, 22, 10, 28, 33, 0, DateTimeKind.Unspecified),
                            IdClienteFK = 3,
                            IdMascotaFK = 3,
                            IdVeterinarioFK = 3,
                            MotivoCita = "Control de peso"
                        },
                        new
                        {
                            Id = 4,
                            FechaCita = new DateTime(2023, 10, 23, 14, 55, 52, 0, DateTimeKind.Unspecified),
                            IdClienteFK = 4,
                            IdMascotaFK = 4,
                            IdVeterinarioFK = 4,
                            MotivoCita = "Dolor abdominal"
                        },
                        new
                        {
                            Id = 5,
                            FechaCita = new DateTime(2023, 2, 24, 15, 25, 28, 0, DateTimeKind.Unspecified),
                            IdClienteFK = 5,
                            IdMascotaFK = 5,
                            IdVeterinarioFK = 5,
                            MotivoCita = "Vacunación"
                        },
                        new
                        {
                            Id = 6,
                            FechaCita = new DateTime(2023, 10, 25, 17, 33, 11, 0, DateTimeKind.Unspecified),
                            IdClienteFK = 6,
                            IdMascotaFK = 6,
                            IdVeterinarioFK = 6,
                            MotivoCita = "Control de diabetes"
                        },
                        new
                        {
                            Id = 7,
                            FechaCita = new DateTime(2023, 1, 26, 8, 49, 53, 0, DateTimeKind.Unspecified),
                            IdClienteFK = 7,
                            IdMascotaFK = 7,
                            IdVeterinarioFK = 7,
                            MotivoCita = "Vacunación"
                        },
                        new
                        {
                            Id = 8,
                            FechaCita = new DateTime(2023, 10, 27, 15, 7, 49, 0, DateTimeKind.Unspecified),
                            IdClienteFK = 8,
                            IdMascotaFK = 8,
                            IdVeterinarioFK = 8,
                            MotivoCita = "Extracción dental"
                        },
                        new
                        {
                            Id = 9,
                            FechaCita = new DateTime(2023, 10, 28, 13, 38, 51, 0, DateTimeKind.Unspecified),
                            IdClienteFK = 9,
                            IdMascotaFK = 9,
                            IdVeterinarioFK = 9,
                            MotivoCita = "Cirugía de esterilización"
                        },
                        new
                        {
                            Id = 10,
                            FechaCita = new DateTime(2023, 10, 29, 11, 34, 10, 0, DateTimeKind.Unspecified),
                            IdClienteFK = 10,
                            IdMascotaFK = 10,
                            IdVeterinarioFK = 10,
                            MotivoCita = "Consulta de rutina"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CedulaCliente")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("CorreoCliente")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NombreCliente")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("TelefonoCliente")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.HasKey("Id");

                    b.ToTable("cliente", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CedulaCliente = "123456789",
                            CorreoCliente = "juan.perez@example.com",
                            NombreCliente = "Juan Pérez",
                            TelefonoCliente = "123-456-7890"
                        },
                        new
                        {
                            Id = 2,
                            CedulaCliente = "234567890",
                            CorreoCliente = "maria.rodriguez@example.com",
                            NombreCliente = "María Rodríguez",
                            TelefonoCliente = "234-567-8901"
                        },
                        new
                        {
                            Id = 3,
                            CedulaCliente = "345678901",
                            CorreoCliente = "carlos.gomez@example.com",
                            NombreCliente = "Carlos Gómez",
                            TelefonoCliente = "345-678-9012"
                        },
                        new
                        {
                            Id = 4,
                            CedulaCliente = "456789012",
                            CorreoCliente = "laura.martinez@example.com",
                            NombreCliente = "Laura Martínez",
                            TelefonoCliente = "456-789-0123"
                        },
                        new
                        {
                            Id = 5,
                            CedulaCliente = "567890123",
                            CorreoCliente = "andres.lopez@example.com",
                            NombreCliente = "Andrés López",
                            TelefonoCliente = "567-890-1234"
                        },
                        new
                        {
                            Id = 6,
                            CedulaCliente = "678901234",
                            CorreoCliente = "ana.ramirez@example.com",
                            NombreCliente = "Ana Ramírez",
                            TelefonoCliente = "678-901-2345"
                        },
                        new
                        {
                            Id = 7,
                            CedulaCliente = "789012345",
                            CorreoCliente = "javier.herrera@example.com",
                            NombreCliente = "Javier Herrera",
                            TelefonoCliente = "789-012-3456"
                        },
                        new
                        {
                            Id = 8,
                            CedulaCliente = "890123456",
                            CorreoCliente = "isabel.castro@example.com",
                            NombreCliente = "Isabel Castro",
                            TelefonoCliente = "890-123-4567"
                        },
                        new
                        {
                            Id = 9,
                            CedulaCliente = "901234567",
                            CorreoCliente = "sergio.vargas@example.com",
                            NombreCliente = "Sergio Vargas",
                            TelefonoCliente = "901-234-5678"
                        },
                        new
                        {
                            Id = 10,
                            CedulaCliente = "012345678",
                            CorreoCliente = "natalia.lopez@example.com",
                            NombreCliente = "Natalia López",
                            TelefonoCliente = "012-345-6789"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Especie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NombreEspecie")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("especie", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NombreEspecie = "Canino"
                        },
                        new
                        {
                            Id = 2,
                            NombreEspecie = "Felino"
                        },
                        new
                        {
                            Id = 3,
                            NombreEspecie = "Ave"
                        },
                        new
                        {
                            Id = 4,
                            NombreEspecie = "Roedores"
                        },
                        new
                        {
                            Id = 5,
                            NombreEspecie = "Exotico"
                        });
                });

            modelBuilder.Entity("Domain.Entities.FacturaCompra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateOnly>("FechaCompra")
                        .HasColumnType("date");

                    b.Property<int>("IdProveedorFK")
                        .HasColumnType("int");

                    b.Property<double>("PrecioTotal")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("IdProveedorFK");

                    b.ToTable("factura_compra", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FechaCompra = new DateOnly(2023, 10, 29),
                            IdProveedorFK = 1,
                            PrecioTotal = 200000.0
                        },
                        new
                        {
                            Id = 2,
                            FechaCompra = new DateOnly(2023, 10, 28),
                            IdProveedorFK = 2,
                            PrecioTotal = 250000.0
                        },
                        new
                        {
                            Id = 3,
                            FechaCompra = new DateOnly(2023, 10, 27),
                            IdProveedorFK = 1,
                            PrecioTotal = 180000.0
                        },
                        new
                        {
                            Id = 4,
                            FechaCompra = new DateOnly(2023, 10, 26),
                            IdProveedorFK = 3,
                            PrecioTotal = 300000.0
                        },
                        new
                        {
                            Id = 5,
                            FechaCompra = new DateOnly(2023, 10, 25),
                            IdProveedorFK = 2,
                            PrecioTotal = 220000.0
                        },
                        new
                        {
                            Id = 6,
                            FechaCompra = new DateOnly(2023, 10, 24),
                            IdProveedorFK = 3,
                            PrecioTotal = 260000.0
                        },
                        new
                        {
                            Id = 7,
                            FechaCompra = new DateOnly(2023, 10, 23),
                            IdProveedorFK = 1,
                            PrecioTotal = 190000.0
                        },
                        new
                        {
                            Id = 8,
                            FechaCompra = new DateOnly(2023, 10, 22),
                            IdProveedorFK = 5,
                            PrecioTotal = 270000.0
                        },
                        new
                        {
                            Id = 9,
                            FechaCompra = new DateOnly(2023, 10, 21),
                            IdProveedorFK = 3,
                            PrecioTotal = 230000.0
                        },
                        new
                        {
                            Id = 10,
                            FechaCompra = new DateOnly(2023, 10, 20),
                            IdProveedorFK = 4,
                            PrecioTotal = 210000.0
                        });
                });

            modelBuilder.Entity("Domain.Entities.FacturaServicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaServicio")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdCitaFk")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoServicioFK")
                        .HasColumnType("int");

                    b.Property<double>("PrecioTotal")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("IdCitaFk");

                    b.HasIndex("IdTipoServicioFK");

                    b.ToTable("factura_servicio", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FechaServicio = new DateTime(2023, 10, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCitaFk = 1,
                            IdTipoServicioFK = 3,
                            PrecioTotal = 200000.0
                        },
                        new
                        {
                            Id = 2,
                            FechaServicio = new DateTime(2023, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCitaFk = 2,
                            IdTipoServicioFK = 2,
                            PrecioTotal = 180000.0
                        },
                        new
                        {
                            Id = 3,
                            FechaServicio = new DateTime(2023, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCitaFk = 3,
                            IdTipoServicioFK = 1,
                            PrecioTotal = 220000.0
                        },
                        new
                        {
                            Id = 4,
                            FechaServicio = new DateTime(2023, 11, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCitaFk = 4,
                            IdTipoServicioFK = 3,
                            PrecioTotal = 250000.0
                        },
                        new
                        {
                            Id = 5,
                            FechaServicio = new DateTime(2023, 11, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCitaFk = 5,
                            IdTipoServicioFK = 5,
                            PrecioTotal = 210000.0
                        },
                        new
                        {
                            Id = 6,
                            FechaServicio = new DateTime(2023, 12, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCitaFk = 6,
                            IdTipoServicioFK = 4,
                            PrecioTotal = 240000.0
                        },
                        new
                        {
                            Id = 7,
                            FechaServicio = new DateTime(2023, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCitaFk = 7,
                            IdTipoServicioFK = 3,
                            PrecioTotal = 190000.0
                        },
                        new
                        {
                            Id = 8,
                            FechaServicio = new DateTime(2023, 12, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCitaFk = 8,
                            IdTipoServicioFK = 4,
                            PrecioTotal = 230000.0
                        },
                        new
                        {
                            Id = 9,
                            FechaServicio = new DateTime(2023, 12, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCitaFk = 9,
                            IdTipoServicioFK = 2,
                            PrecioTotal = 260000.0
                        },
                        new
                        {
                            Id = 10,
                            FechaServicio = new DateTime(2023, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCitaFk = 10,
                            IdTipoServicioFK = 3,
                            PrecioTotal = 270000.0
                        });
                });

            modelBuilder.Entity("Domain.Entities.FacturaVenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaVenta")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdClienteFK")
                        .HasColumnType("int");

                    b.Property<double>("PrecioTotal")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("IdClienteFK");

                    b.ToTable("factura_venta", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FechaVenta = new DateTime(2023, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdClienteFK = 1,
                            PrecioTotal = 20000.0
                        },
                        new
                        {
                            Id = 2,
                            FechaVenta = new DateTime(2023, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdClienteFK = 2,
                            PrecioTotal = 18000.0
                        },
                        new
                        {
                            Id = 3,
                            FechaVenta = new DateTime(2023, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdClienteFK = 3,
                            PrecioTotal = 22000.0
                        },
                        new
                        {
                            Id = 4,
                            FechaVenta = new DateTime(2023, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdClienteFK = 4,
                            PrecioTotal = 25000.0
                        },
                        new
                        {
                            Id = 5,
                            FechaVenta = new DateTime(2023, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdClienteFK = 5,
                            PrecioTotal = 21000.0
                        },
                        new
                        {
                            Id = 6,
                            FechaVenta = new DateTime(2023, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdClienteFK = 6,
                            PrecioTotal = 24000.0
                        },
                        new
                        {
                            Id = 7,
                            FechaVenta = new DateTime(2023, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdClienteFK = 7,
                            PrecioTotal = 19000.0
                        },
                        new
                        {
                            Id = 8,
                            FechaVenta = new DateTime(2023, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdClienteFK = 8,
                            PrecioTotal = 23000.0
                        },
                        new
                        {
                            Id = 9,
                            FechaVenta = new DateTime(2023, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdClienteFK = 9,
                            PrecioTotal = 26000.0
                        },
                        new
                        {
                            Id = 10,
                            FechaVenta = new DateTime(2023, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdClienteFK = 10,
                            PrecioTotal = 27000.0
                        },
                        new
                        {
                            Id = 11,
                            FechaVenta = new DateTime(2023, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdClienteFK = 1,
                            PrecioTotal = 20000.0
                        },
                        new
                        {
                            Id = 12,
                            FechaVenta = new DateTime(2023, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdClienteFK = 2,
                            PrecioTotal = 18000.0
                        },
                        new
                        {
                            Id = 13,
                            FechaVenta = new DateTime(2023, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdClienteFK = 3,
                            PrecioTotal = 22000.0
                        },
                        new
                        {
                            Id = 14,
                            FechaVenta = new DateTime(2023, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdClienteFK = 4,
                            PrecioTotal = 25000.0
                        },
                        new
                        {
                            Id = 15,
                            FechaVenta = new DateTime(2023, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdClienteFK = 5,
                            PrecioTotal = 21000.0
                        },
                        new
                        {
                            Id = 16,
                            FechaVenta = new DateTime(2023, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdClienteFK = 6,
                            PrecioTotal = 24000.0
                        },
                        new
                        {
                            Id = 17,
                            FechaVenta = new DateTime(2023, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdClienteFK = 7,
                            PrecioTotal = 19000.0
                        },
                        new
                        {
                            Id = 18,
                            FechaVenta = new DateTime(2023, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdClienteFK = 8,
                            PrecioTotal = 23000.0
                        },
                        new
                        {
                            Id = 19,
                            FechaVenta = new DateTime(2023, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdClienteFK = 9,
                            PrecioTotal = 26000.0
                        },
                        new
                        {
                            Id = 20,
                            FechaVenta = new DateTime(2023, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdClienteFK = 10,
                            PrecioTotal = 27000.0
                        });
                });

            modelBuilder.Entity("Domain.Entities.Marca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NombreMarca")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("marca", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NombreMarca = "Serave"
                        },
                        new
                        {
                            Id = 2,
                            NombreMarca = "Pficer"
                        },
                        new
                        {
                            Id = 3,
                            NombreMarca = "DrogasMax"
                        },
                        new
                        {
                            Id = 4,
                            NombreMarca = "Salud Total"
                        },
                        new
                        {
                            Id = 5,
                            NombreMarca = "Genfar"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Mascota", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateOnly>("FechaNacimiento")
                        .HasColumnType("date");

                    b.Property<int>("IdClienteFK")
                        .HasColumnType("int");

                    b.Property<int>("IdRazaFK")
                        .HasColumnType("int");

                    b.Property<string>("NombreMascota")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("IdClienteFK");

                    b.HasIndex("IdRazaFK");

                    b.ToTable("mascota", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FechaNacimiento = new DateOnly(2018, 5, 10),
                            IdClienteFK = 1,
                            IdRazaFK = 6,
                            NombreMascota = "Luna"
                        },
                        new
                        {
                            Id = 2,
                            FechaNacimiento = new DateOnly(2019, 2, 15),
                            IdClienteFK = 2,
                            IdRazaFK = 2,
                            NombreMascota = "Max"
                        },
                        new
                        {
                            Id = 3,
                            FechaNacimiento = new DateOnly(2017, 8, 20),
                            IdClienteFK = 3,
                            IdRazaFK = 3,
                            NombreMascota = "Bella"
                        },
                        new
                        {
                            Id = 4,
                            FechaNacimiento = new DateOnly(2016, 11, 5),
                            IdClienteFK = 4,
                            IdRazaFK = 1,
                            NombreMascota = "Rocky"
                        },
                        new
                        {
                            Id = 5,
                            FechaNacimiento = new DateOnly(2018, 7, 30),
                            IdClienteFK = 5,
                            IdRazaFK = 2,
                            NombreMascota = "Daisy"
                        },
                        new
                        {
                            Id = 6,
                            FechaNacimiento = new DateOnly(2019, 1, 12),
                            IdClienteFK = 6,
                            IdRazaFK = 3,
                            NombreMascota = "Charlie"
                        },
                        new
                        {
                            Id = 7,
                            FechaNacimiento = new DateOnly(2017, 3, 25),
                            IdClienteFK = 7,
                            IdRazaFK = 6,
                            NombreMascota = "Lucky"
                        },
                        new
                        {
                            Id = 8,
                            FechaNacimiento = new DateOnly(2016, 6, 18),
                            IdClienteFK = 8,
                            IdRazaFK = 7,
                            NombreMascota = "Milo"
                        },
                        new
                        {
                            Id = 9,
                            FechaNacimiento = new DateOnly(2015, 10, 8),
                            IdClienteFK = 9,
                            IdRazaFK = 4,
                            NombreMascota = "Sophie"
                        },
                        new
                        {
                            Id = 10,
                            FechaNacimiento = new DateOnly(2018, 4, 3),
                            IdClienteFK = 10,
                            IdRazaFK = 5,
                            NombreMascota = "Teddy"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Medicamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IdMarcaFK")
                        .HasColumnType("int");

                    b.Property<int>("IdProveedorFK")
                        .HasColumnType("int");

                    b.Property<string>("NombreMedicamento")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<double>("PrecioMedicamento")
                        .HasColumnType("double");

                    b.Property<int>("StockMedicamento")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdMarcaFK");

                    b.HasIndex("IdProveedorFK");

                    b.ToTable("medicamento", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdMarcaFK = 1,
                            IdProveedorFK = 1,
                            NombreMedicamento = "Paracetamol",
                            PrecioMedicamento = 10050.0,
                            StockMedicamento = 100
                        },
                        new
                        {
                            Id = 2,
                            IdMarcaFK = 1,
                            IdProveedorFK = 2,
                            NombreMedicamento = "Ibuprofeno",
                            PrecioMedicamento = 12.75,
                            StockMedicamento = 80
                        },
                        new
                        {
                            Id = 3,
                            IdMarcaFK = 2,
                            IdProveedorFK = 3,
                            NombreMedicamento = "Amoxicilina",
                            PrecioMedicamento = 15020.0,
                            StockMedicamento = 90
                        },
                        new
                        {
                            Id = 4,
                            IdMarcaFK = 2,
                            IdProveedorFK = 4,
                            NombreMedicamento = "Omeprazol",
                            PrecioMedicamento = 80090.0,
                            StockMedicamento = 70
                        },
                        new
                        {
                            Id = 5,
                            IdMarcaFK = 3,
                            IdProveedorFK = 5,
                            NombreMedicamento = "Loratadina",
                            PrecioMedicamento = 60075.0,
                            StockMedicamento = 60
                        },
                        new
                        {
                            Id = 6,
                            IdMarcaFK = 3,
                            IdProveedorFK = 6,
                            NombreMedicamento = "Dexametasona",
                            PrecioMedicamento = 18040.0,
                            StockMedicamento = 50
                        },
                        new
                        {
                            Id = 7,
                            IdMarcaFK = 4,
                            IdProveedorFK = 7,
                            NombreMedicamento = "Ciprofloxacino",
                            PrecioMedicamento = 14060.0,
                            StockMedicamento = 40
                        },
                        new
                        {
                            Id = 8,
                            IdMarcaFK = 4,
                            IdProveedorFK = 8,
                            NombreMedicamento = "Aspirina",
                            PrecioMedicamento = 50025.0,
                            StockMedicamento = 30
                        },
                        new
                        {
                            Id = 9,
                            IdMarcaFK = 5,
                            IdProveedorFK = 9,
                            NombreMedicamento = "Ranitidina",
                            PrecioMedicamento = 90080.0,
                            StockMedicamento = 20
                        },
                        new
                        {
                            Id = 10,
                            IdMarcaFK = 5,
                            IdProveedorFK = 10,
                            NombreMedicamento = "Clotrimazol",
                            PrecioMedicamento = 7030.0,
                            StockMedicamento = 10
                        });
                });

            modelBuilder.Entity("Domain.Entities.MedicamentoCompra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("IdFacturaCompraFK")
                        .HasColumnType("int");

                    b.Property<int>("IdMedicamentoFK")
                        .HasColumnType("int");

                    b.Property<double>("Precio")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("IdFacturaCompraFK");

                    b.HasIndex("IdMedicamentoFK");

                    b.ToTable("medicamento_compra", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cantidad = 5,
                            IdFacturaCompraFK = 1,
                            IdMedicamentoFK = 1,
                            Precio = 20000.0
                        },
                        new
                        {
                            Id = 2,
                            Cantidad = 3,
                            IdFacturaCompraFK = 2,
                            IdMedicamentoFK = 2,
                            Precio = 15000.0
                        },
                        new
                        {
                            Id = 3,
                            Cantidad = 7,
                            IdFacturaCompraFK = 3,
                            IdMedicamentoFK = 1,
                            Precio = 22000.0
                        },
                        new
                        {
                            Id = 4,
                            Cantidad = 2,
                            IdFacturaCompraFK = 4,
                            IdMedicamentoFK = 3,
                            Precio = 18000.0
                        },
                        new
                        {
                            Id = 5,
                            Cantidad = 4,
                            IdFacturaCompraFK = 5,
                            IdMedicamentoFK = 2,
                            Precio = 19000.0
                        },
                        new
                        {
                            Id = 6,
                            Cantidad = 6,
                            IdFacturaCompraFK = 6,
                            IdMedicamentoFK = 1,
                            Precio = 21000.0
                        },
                        new
                        {
                            Id = 7,
                            Cantidad = 8,
                            IdFacturaCompraFK = 7,
                            IdMedicamentoFK = 3,
                            Precio = 23000.0
                        },
                        new
                        {
                            Id = 8,
                            Cantidad = 1,
                            IdFacturaCompraFK = 8,
                            IdMedicamentoFK = 2,
                            Precio = 17000.0
                        },
                        new
                        {
                            Id = 9,
                            Cantidad = 9,
                            IdFacturaCompraFK = 9,
                            IdMedicamentoFK = 1,
                            Precio = 24000.0
                        },
                        new
                        {
                            Id = 10,
                            Cantidad = 3,
                            IdFacturaCompraFK = 10,
                            IdMedicamentoFK = 3,
                            Precio = 16000.0
                        },
                        new
                        {
                            Id = 11,
                            Cantidad = 5,
                            IdFacturaCompraFK = 1,
                            IdMedicamentoFK = 3,
                            Precio = 20000.0
                        },
                        new
                        {
                            Id = 12,
                            Cantidad = 3,
                            IdFacturaCompraFK = 2,
                            IdMedicamentoFK = 1,
                            Precio = 15000.0
                        },
                        new
                        {
                            Id = 13,
                            Cantidad = 7,
                            IdFacturaCompraFK = 3,
                            IdMedicamentoFK = 2,
                            Precio = 22000.0
                        },
                        new
                        {
                            Id = 14,
                            Cantidad = 2,
                            IdFacturaCompraFK = 4,
                            IdMedicamentoFK = 2,
                            Precio = 18000.0
                        },
                        new
                        {
                            Id = 15,
                            Cantidad = 4,
                            IdFacturaCompraFK = 5,
                            IdMedicamentoFK = 1,
                            Precio = 19000.0
                        },
                        new
                        {
                            Id = 16,
                            Cantidad = 6,
                            IdFacturaCompraFK = 6,
                            IdMedicamentoFK = 3,
                            Precio = 21000.0
                        },
                        new
                        {
                            Id = 17,
                            Cantidad = 8,
                            IdFacturaCompraFK = 7,
                            IdMedicamentoFK = 2,
                            Precio = 23000.0
                        },
                        new
                        {
                            Id = 18,
                            Cantidad = 1,
                            IdFacturaCompraFK = 8,
                            IdMedicamentoFK = 1,
                            Precio = 17000.0
                        },
                        new
                        {
                            Id = 19,
                            Cantidad = 9,
                            IdFacturaCompraFK = 9,
                            IdMedicamentoFK = 3,
                            Precio = 24000.0
                        },
                        new
                        {
                            Id = 120,
                            Cantidad = 3,
                            IdFacturaCompraFK = 10,
                            IdMedicamentoFK = 1,
                            Precio = 16000.0
                        });
                });

            modelBuilder.Entity("Domain.Entities.MedicamentoServicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("IdFacturaServicioFK")
                        .HasColumnType("int");

                    b.Property<int>("IdMedicamentoFK")
                        .HasColumnType("int");

                    b.Property<double>("Precio")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("IdFacturaServicioFK");

                    b.HasIndex("IdMedicamentoFK");

                    b.ToTable("medicamento_servicio", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cantidad = 4,
                            IdFacturaServicioFK = 1,
                            IdMedicamentoFK = 1,
                            Precio = 20000.0
                        },
                        new
                        {
                            Id = 2,
                            Cantidad = 3,
                            IdFacturaServicioFK = 2,
                            IdMedicamentoFK = 2,
                            Precio = 18000.0
                        },
                        new
                        {
                            Id = 3,
                            Cantidad = 5,
                            IdFacturaServicioFK = 3,
                            IdMedicamentoFK = 1,
                            Precio = 22000.0
                        },
                        new
                        {
                            Id = 4,
                            Cantidad = 2,
                            IdFacturaServicioFK = 4,
                            IdMedicamentoFK = 3,
                            Precio = 21000.0
                        },
                        new
                        {
                            Id = 5,
                            Cantidad = 6,
                            IdFacturaServicioFK = 5,
                            IdMedicamentoFK = 2,
                            Precio = 24000.0
                        },
                        new
                        {
                            Id = 6,
                            Cantidad = 3,
                            IdFacturaServicioFK = 6,
                            IdMedicamentoFK = 1,
                            Precio = 19000.0
                        },
                        new
                        {
                            Id = 7,
                            Cantidad = 5,
                            IdFacturaServicioFK = 7,
                            IdMedicamentoFK = 3,
                            Precio = 21000.0
                        },
                        new
                        {
                            Id = 8,
                            Cantidad = 4,
                            IdFacturaServicioFK = 8,
                            IdMedicamentoFK = 2,
                            Precio = 22000.0
                        },
                        new
                        {
                            Id = 9,
                            Cantidad = 3,
                            IdFacturaServicioFK = 9,
                            IdMedicamentoFK = 1,
                            Precio = 19000.0
                        },
                        new
                        {
                            Id = 10,
                            Cantidad = 6,
                            IdFacturaServicioFK = 10,
                            IdMedicamentoFK = 3,
                            Precio = 23000.0
                        },
                        new
                        {
                            Id = 11,
                            Cantidad = 4,
                            IdFacturaServicioFK = 1,
                            IdMedicamentoFK = 3,
                            Precio = 20000.0
                        },
                        new
                        {
                            Id = 12,
                            Cantidad = 3,
                            IdFacturaServicioFK = 2,
                            IdMedicamentoFK = 1,
                            Precio = 18000.0
                        },
                        new
                        {
                            Id = 13,
                            Cantidad = 5,
                            IdFacturaServicioFK = 3,
                            IdMedicamentoFK = 3,
                            Precio = 22000.0
                        },
                        new
                        {
                            Id = 14,
                            Cantidad = 2,
                            IdFacturaServicioFK = 4,
                            IdMedicamentoFK = 2,
                            Precio = 21000.0
                        },
                        new
                        {
                            Id = 15,
                            Cantidad = 6,
                            IdFacturaServicioFK = 5,
                            IdMedicamentoFK = 1,
                            Precio = 24000.0
                        },
                        new
                        {
                            Id = 16,
                            Cantidad = 3,
                            IdFacturaServicioFK = 6,
                            IdMedicamentoFK = 3,
                            Precio = 19000.0
                        },
                        new
                        {
                            Id = 17,
                            Cantidad = 5,
                            IdFacturaServicioFK = 7,
                            IdMedicamentoFK = 1,
                            Precio = 21000.0
                        },
                        new
                        {
                            Id = 18,
                            Cantidad = 4,
                            IdFacturaServicioFK = 8,
                            IdMedicamentoFK = 1,
                            Precio = 22000.0
                        },
                        new
                        {
                            Id = 19,
                            Cantidad = 3,
                            IdFacturaServicioFK = 9,
                            IdMedicamentoFK = 3,
                            Precio = 19000.0
                        },
                        new
                        {
                            Id = 20,
                            Cantidad = 6,
                            IdFacturaServicioFK = 10,
                            IdMedicamentoFK = 2,
                            Precio = 23000.0
                        });
                });

            modelBuilder.Entity("Domain.Entities.MedicamentoVenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("IdFacturaVentaFK")
                        .HasColumnType("int");

                    b.Property<int>("IdMedicamentoFK")
                        .HasColumnType("int");

                    b.Property<double>("Precio")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("IdFacturaVentaFK");

                    b.HasIndex("IdMedicamentoFK");

                    b.ToTable("MedicamentoVenta", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cantidad = 6,
                            IdFacturaVentaFK = 1,
                            IdMedicamentoFK = 1,
                            Precio = 30000.0
                        },
                        new
                        {
                            Id = 2,
                            Cantidad = 4,
                            IdFacturaVentaFK = 1,
                            IdMedicamentoFK = 2,
                            Precio = 28000.0
                        },
                        new
                        {
                            Id = 3,
                            Cantidad = 8,
                            IdFacturaVentaFK = 2,
                            IdMedicamentoFK = 3,
                            Precio = 32000.0
                        },
                        new
                        {
                            Id = 4,
                            Cantidad = 5,
                            IdFacturaVentaFK = 2,
                            IdMedicamentoFK = 4,
                            Precio = 31000.0
                        },
                        new
                        {
                            Id = 5,
                            Cantidad = 7,
                            IdFacturaVentaFK = 3,
                            IdMedicamentoFK = 5,
                            Precio = 29000.0
                        },
                        new
                        {
                            Id = 6,
                            Cantidad = 3,
                            IdFacturaVentaFK = 3,
                            IdMedicamentoFK = 6,
                            Precio = 27000.0
                        },
                        new
                        {
                            Id = 7,
                            Cantidad = 9,
                            IdFacturaVentaFK = 4,
                            IdMedicamentoFK = 7,
                            Precio = 26000.0
                        },
                        new
                        {
                            Id = 8,
                            Cantidad = 2,
                            IdFacturaVentaFK = 4,
                            IdMedicamentoFK = 8,
                            Precio = 24000.0
                        },
                        new
                        {
                            Id = 9,
                            Cantidad = 5,
                            IdFacturaVentaFK = 5,
                            IdMedicamentoFK = 9,
                            Precio = 22000.0
                        },
                        new
                        {
                            Id = 10,
                            Cantidad = 6,
                            IdFacturaVentaFK = 5,
                            IdMedicamentoFK = 10,
                            Precio = 20000.0
                        },
                        new
                        {
                            Id = 11,
                            Cantidad = 8,
                            IdFacturaVentaFK = 6,
                            IdMedicamentoFK = 1,
                            Precio = 18000.0
                        },
                        new
                        {
                            Id = 12,
                            Cantidad = 3,
                            IdFacturaVentaFK = 6,
                            IdMedicamentoFK = 2,
                            Precio = 160000.0
                        },
                        new
                        {
                            Id = 13,
                            Cantidad = 7,
                            IdFacturaVentaFK = 7,
                            IdMedicamentoFK = 3,
                            Precio = 14000.0
                        },
                        new
                        {
                            Id = 14,
                            Cantidad = 4,
                            IdFacturaVentaFK = 7,
                            IdMedicamentoFK = 4,
                            Precio = 12000.0
                        },
                        new
                        {
                            Id = 15,
                            Cantidad = 2,
                            IdFacturaVentaFK = 8,
                            IdMedicamentoFK = 5,
                            Precio = 10000.0
                        },
                        new
                        {
                            Id = 16,
                            Cantidad = 5,
                            IdFacturaVentaFK = 8,
                            IdMedicamentoFK = 6,
                            Precio = 80000.0
                        },
                        new
                        {
                            Id = 17,
                            Cantidad = 6,
                            IdFacturaVentaFK = 9,
                            IdMedicamentoFK = 7,
                            Precio = 60000.0
                        },
                        new
                        {
                            Id = 18,
                            Cantidad = 3,
                            IdFacturaVentaFK = 9,
                            IdMedicamentoFK = 8,
                            Precio = 40000.0
                        },
                        new
                        {
                            Id = 19,
                            Cantidad = 9,
                            IdFacturaVentaFK = 10,
                            IdMedicamentoFK = 9,
                            Precio = 20000.0
                        },
                        new
                        {
                            Id = 20,
                            Cantidad = 7,
                            IdFacturaVentaFK = 10,
                            IdMedicamentoFK = 10,
                            Precio = 10000.0
                        });
                });

            modelBuilder.Entity("Domain.Entities.Proveedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DireccionProveedor")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NombreProveedor")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TelefonoProveedor")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("proveedor", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DireccionProveedor = "Carrera 10 #25-30, Bogotá",
                            NombreProveedor = "Droguería La Economía",
                            TelefonoProveedor = "123-456-7890"
                        },
                        new
                        {
                            Id = 2,
                            DireccionProveedor = "Calle 15 #45-12, Medellín",
                            NombreProveedor = "Droguería San Martín",
                            TelefonoProveedor = "234-567-8901"
                        },
                        new
                        {
                            Id = 3,
                            DireccionProveedor = "Avenida 5 #8-40, Cali",
                            NombreProveedor = "Farmacia El Rosario",
                            TelefonoProveedor = "345-678-9012"
                        },
                        new
                        {
                            Id = 4,
                            DireccionProveedor = "Carrera 20 #33-55, Barranquilla",
                            NombreProveedor = "Droguería La Salud",
                            TelefonoProveedor = "456-789-0123"
                        },
                        new
                        {
                            Id = 5,
                            DireccionProveedor = "Calle 30 #17-22, Cartagena",
                            NombreProveedor = "Farmacia Los Alamos",
                            TelefonoProveedor = "567-890-1234"
                        },
                        new
                        {
                            Id = 6,
                            DireccionProveedor = "Carrera 8 #12-30, Bucaramanga",
                            NombreProveedor = "Droguería El Carmen",
                            TelefonoProveedor = "678-901-2345"
                        },
                        new
                        {
                            Id = 7,
                            DireccionProveedor = "Avenida 15 #40-18, Cúcuta",
                            NombreProveedor = "Farmacia La Esperanza",
                            TelefonoProveedor = "789-012-3456"
                        },
                        new
                        {
                            Id = 8,
                            DireccionProveedor = "Calle 25 #10-50, Pereira",
                            NombreProveedor = "Droguería San José",
                            TelefonoProveedor = "890-123-4567"
                        },
                        new
                        {
                            Id = 9,
                            DireccionProveedor = "Carrera 12 #22-15, Santa Marta",
                            NombreProveedor = "Farmacia Santa Marta",
                            TelefonoProveedor = "901-234-5678"
                        },
                        new
                        {
                            Id = 10,
                            DireccionProveedor = "Avenida 3 #5-10, Manizales",
                            NombreProveedor = "Droguería El Parque",
                            TelefonoProveedor = "012-345-6789"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Raza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IdEspecieFK")
                        .HasColumnType("int");

                    b.Property<string>("NombreRaza")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdEspecieFK");

                    b.ToTable("raza", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdEspecieFK = 1,
                            NombreRaza = "Labrador Retriever"
                        },
                        new
                        {
                            Id = 2,
                            IdEspecieFK = 2,
                            NombreRaza = "Persa"
                        },
                        new
                        {
                            Id = 3,
                            IdEspecieFK = 3,
                            NombreRaza = "Periquito Australiano"
                        },
                        new
                        {
                            Id = 4,
                            IdEspecieFK = 4,
                            NombreRaza = "Cobaya"
                        },
                        new
                        {
                            Id = 5,
                            IdEspecieFK = 5,
                            NombreRaza = "Gecko Leopardo"
                        },
                        new
                        {
                            Id = 6,
                            IdEspecieFK = 1,
                            NombreRaza = "Golden Retriver"
                        },
                        new
                        {
                            Id = 7,
                            IdEspecieFK = 2,
                            NombreRaza = "Siamés"
                        },
                        new
                        {
                            Id = 8,
                            IdEspecieFK = 3,
                            NombreRaza = "Canario"
                        },
                        new
                        {
                            Id = 9,
                            IdEspecieFK = 4,
                            NombreRaza = "Hámster"
                        },
                        new
                        {
                            Id = 10,
                            IdEspecieFK = 5,
                            NombreRaza = "Rana Dardo Venenoso"
                        });
                });

            modelBuilder.Entity("Domain.Entities.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdUsuarioFK")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Revoked")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Token")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuarioFK");

                    b.ToTable("refresh_token", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NombreRol")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("rolName");

                    b.HasKey("Id");

                    b.ToTable("rol", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NombreRol = "Administrador"
                        },
                        new
                        {
                            Id = 2,
                            NombreRol = "Empleado"
                        });
                });

            modelBuilder.Entity("Domain.Entities.TipoServicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NombreServicio")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<double>("PrecioServicio")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.ToTable("tipo_servicio", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NombreServicio = "Operacion",
                            PrecioServicio = 0.0
                        },
                        new
                        {
                            Id = 2,
                            NombreServicio = "Bañado",
                            PrecioServicio = 0.0
                        },
                        new
                        {
                            Id = 3,
                            NombreServicio = "Vacunacion",
                            PrecioServicio = 0.0
                        },
                        new
                        {
                            Id = 4,
                            NombreServicio = "Desparasitación",
                            PrecioServicio = 0.0
                        },
                        new
                        {
                            Id = 5,
                            NombreServicio = "Examen General",
                            PrecioServicio = 0.0
                        });
                });

            modelBuilder.Entity("Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaveUsuario")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar")
                        .HasColumnName("password");

                    b.Property<string>("CorreoUsuario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("email");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.ToTable("user", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.UsuarioRol", b =>
                {
                    b.Property<int>("IdUsuarioFK")
                        .HasColumnType("int");

                    b.Property<int>("IdRolFK")
                        .HasColumnType("int");

                    b.HasKey("IdUsuarioFK", "IdRolFK");

                    b.HasIndex("IdRolFK");

                    b.ToTable("userRol", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Veterinario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CedulaVeterinario")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("CorreoVeterinario")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EspecialidadVeterinario")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("NombreVeterinario")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("TelefonoVeterinario")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.HasKey("Id");

                    b.ToTable("veterinario", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CedulaVeterinario = "123456789",
                            CorreoVeterinario = "dr.smith@example.com",
                            EspecialidadVeterinario = "Cirujano vascular",
                            NombreVeterinario = "Dr. Smith",
                            TelefonoVeterinario = "123-456-7890"
                        },
                        new
                        {
                            Id = 2,
                            CedulaVeterinario = "234567890",
                            CorreoVeterinario = "dr.johnson@example.com",
                            EspecialidadVeterinario = "Dermatología",
                            NombreVeterinario = "Dr. Johnson",
                            TelefonoVeterinario = "234-567-8901"
                        },
                        new
                        {
                            Id = 3,
                            CedulaVeterinario = "345678901",
                            CorreoVeterinario = "dr.brown@example.com",
                            EspecialidadVeterinario = "Oftalmología",
                            NombreVeterinario = "Dr. Brown",
                            TelefonoVeterinario = "345-678-9012"
                        },
                        new
                        {
                            Id = 4,
                            CedulaVeterinario = "456789012",
                            CorreoVeterinario = "dr.davis@example.com",
                            EspecialidadVeterinario = "Cardiología",
                            NombreVeterinario = "Dr. Davis",
                            TelefonoVeterinario = "456-789-0123"
                        },
                        new
                        {
                            Id = 5,
                            CedulaVeterinario = "567890123",
                            CorreoVeterinario = "dr.miller@example.com",
                            EspecialidadVeterinario = "Cirujano vascular",
                            NombreVeterinario = "Dr. Miller",
                            TelefonoVeterinario = "567-890-1234"
                        },
                        new
                        {
                            Id = 6,
                            CedulaVeterinario = "678901234",
                            CorreoVeterinario = "dr.wilson@example.com",
                            EspecialidadVeterinario = "Endocrinología",
                            NombreVeterinario = "Dr. Wilson",
                            TelefonoVeterinario = "678-901-2345"
                        },
                        new
                        {
                            Id = 7,
                            CedulaVeterinario = "789012345",
                            CorreoVeterinario = "dr.moore@example.com",
                            EspecialidadVeterinario = "Gastroenterología",
                            NombreVeterinario = "Dr. Moore",
                            TelefonoVeterinario = "789-012-3456"
                        },
                        new
                        {
                            Id = 8,
                            CedulaVeterinario = "890123456",
                            CorreoVeterinario = "dr.anderson@example.com",
                            EspecialidadVeterinario = "Nefrología",
                            NombreVeterinario = "Dr. Anderson",
                            TelefonoVeterinario = "890-123-4567"
                        },
                        new
                        {
                            Id = 9,
                            CedulaVeterinario = "901234567",
                            CorreoVeterinario = "dr.clark@example.com",
                            EspecialidadVeterinario = "Cirujano vascular",
                            NombreVeterinario = "Dr. Clark",
                            TelefonoVeterinario = "901-234-5678"
                        },
                        new
                        {
                            Id = 10,
                            CedulaVeterinario = "012345678",
                            CorreoVeterinario = "dr.turner@example.com",
                            EspecialidadVeterinario = "Inmunología",
                            NombreVeterinario = "Dr. Turner",
                            TelefonoVeterinario = "012-345-6789"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Cita", b =>
                {
                    b.HasOne("Domain.Entities.Cliente", "Cliente")
                        .WithMany("Citas")
                        .HasForeignKey("IdClienteFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Mascota", "Mascota")
                        .WithMany("Citas")
                        .HasForeignKey("IdMascotaFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Veterinario", "Veterinario")
                        .WithMany("Citas")
                        .HasForeignKey("IdVeterinarioFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Mascota");

                    b.Navigation("Veterinario");
                });

            modelBuilder.Entity("Domain.Entities.FacturaCompra", b =>
                {
                    b.HasOne("Domain.Entities.Proveedor", "Proveedor")
                        .WithMany("FacturaCompras")
                        .HasForeignKey("IdProveedorFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("Domain.Entities.FacturaServicio", b =>
                {
                    b.HasOne("Domain.Entities.Cita", "Cita")
                        .WithMany("FacturasServicios")
                        .HasForeignKey("IdCitaFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.TipoServicio", "TipoServicio")
                        .WithMany("FacturaServicios")
                        .HasForeignKey("IdTipoServicioFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cita");

                    b.Navigation("TipoServicio");
                });

            modelBuilder.Entity("Domain.Entities.FacturaVenta", b =>
                {
                    b.HasOne("Domain.Entities.Cliente", "Cliente")
                        .WithMany("FacturasVentas")
                        .HasForeignKey("IdClienteFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Domain.Entities.Mascota", b =>
                {
                    b.HasOne("Domain.Entities.Cliente", "Cliente")
                        .WithMany("Mascotas")
                        .HasForeignKey("IdClienteFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Raza", "Raza")
                        .WithMany("Mascotas")
                        .HasForeignKey("IdRazaFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Raza");
                });

            modelBuilder.Entity("Domain.Entities.Medicamento", b =>
                {
                    b.HasOne("Domain.Entities.Marca", "Marca")
                        .WithMany("Medicamentos")
                        .HasForeignKey("IdMarcaFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Proveedor", "Proveedor")
                        .WithMany("Medicamentos")
                        .HasForeignKey("IdProveedorFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Marca");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("Domain.Entities.MedicamentoCompra", b =>
                {
                    b.HasOne("Domain.Entities.FacturaCompra", "FacturaCompra")
                        .WithMany("MedicamentosCompras")
                        .HasForeignKey("IdFacturaCompraFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Medicamento", "Medicamento")
                        .WithMany("MedicamentoCompras")
                        .HasForeignKey("IdMedicamentoFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FacturaCompra");

                    b.Navigation("Medicamento");
                });

            modelBuilder.Entity("Domain.Entities.MedicamentoServicio", b =>
                {
                    b.HasOne("Domain.Entities.FacturaServicio", "FacturaServicio")
                        .WithMany("MedicamentoServicios")
                        .HasForeignKey("IdFacturaServicioFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Medicamento", "Medicamento")
                        .WithMany("MedicamentoServicios")
                        .HasForeignKey("IdMedicamentoFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FacturaServicio");

                    b.Navigation("Medicamento");
                });

            modelBuilder.Entity("Domain.Entities.MedicamentoVenta", b =>
                {
                    b.HasOne("Domain.Entities.FacturaVenta", "FacturaVenta")
                        .WithMany("MedicamentoVentas")
                        .HasForeignKey("IdFacturaVentaFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Medicamento", "Medicamento")
                        .WithMany("MedicamentoVentas")
                        .HasForeignKey("IdMedicamentoFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FacturaVenta");

                    b.Navigation("Medicamento");
                });

            modelBuilder.Entity("Domain.Entities.Raza", b =>
                {
                    b.HasOne("Domain.Entities.Especie", "Especie")
                        .WithMany("Razas")
                        .HasForeignKey("IdEspecieFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Especie");
                });

            modelBuilder.Entity("Domain.Entities.RefreshToken", b =>
                {
                    b.HasOne("Domain.Entities.Usuario", "Usuario")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("IdUsuarioFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Domain.Entities.UsuarioRol", b =>
                {
                    b.HasOne("Domain.Entities.Rol", "Rol")
                        .WithMany("UsuariosRols")
                        .HasForeignKey("IdRolFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Usuario", "Usuario")
                        .WithMany("UsuarioRols")
                        .HasForeignKey("IdUsuarioFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Domain.Entities.Cita", b =>
                {
                    b.Navigation("FacturasServicios");
                });

            modelBuilder.Entity("Domain.Entities.Cliente", b =>
                {
                    b.Navigation("Citas");

                    b.Navigation("FacturasVentas");

                    b.Navigation("Mascotas");
                });

            modelBuilder.Entity("Domain.Entities.Especie", b =>
                {
                    b.Navigation("Razas");
                });

            modelBuilder.Entity("Domain.Entities.FacturaCompra", b =>
                {
                    b.Navigation("MedicamentosCompras");
                });

            modelBuilder.Entity("Domain.Entities.FacturaServicio", b =>
                {
                    b.Navigation("MedicamentoServicios");
                });

            modelBuilder.Entity("Domain.Entities.FacturaVenta", b =>
                {
                    b.Navigation("MedicamentoVentas");
                });

            modelBuilder.Entity("Domain.Entities.Marca", b =>
                {
                    b.Navigation("Medicamentos");
                });

            modelBuilder.Entity("Domain.Entities.Mascota", b =>
                {
                    b.Navigation("Citas");
                });

            modelBuilder.Entity("Domain.Entities.Medicamento", b =>
                {
                    b.Navigation("MedicamentoCompras");

                    b.Navigation("MedicamentoServicios");

                    b.Navigation("MedicamentoVentas");
                });

            modelBuilder.Entity("Domain.Entities.Proveedor", b =>
                {
                    b.Navigation("FacturaCompras");

                    b.Navigation("Medicamentos");
                });

            modelBuilder.Entity("Domain.Entities.Raza", b =>
                {
                    b.Navigation("Mascotas");
                });

            modelBuilder.Entity("Domain.Entities.Rol", b =>
                {
                    b.Navigation("UsuariosRols");
                });

            modelBuilder.Entity("Domain.Entities.TipoServicio", b =>
                {
                    b.Navigation("FacturaServicios");
                });

            modelBuilder.Entity("Domain.Entities.Usuario", b =>
                {
                    b.Navigation("RefreshTokens");

                    b.Navigation("UsuarioRols");
                });

            modelBuilder.Entity("Domain.Entities.Veterinario", b =>
                {
                    b.Navigation("Citas");
                });
#pragma warning restore 612, 618
        }
    }
}
